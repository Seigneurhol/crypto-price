{"ast":null,"code":"var _jsxFileName = \"/Users/Seigneurhol/Documents/ReactTests/crypto-price/crypto-price-react/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Crypto from \"./Crypto/Crypto\";\nimport Navbar from \"./Navbar/Navbar\";\nimport getCryptoByMarketcap from \"./Service/Service\";\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      crypto: [{\n        index: 1,\n        name: \"Bitcoin\",\n        imageURL: \"images/Bitcoin.png\",\n        price: \"$8000\",\n        change: \"+5%\",\n        volume: \"$29 679 894 734\",\n        marketcap: \"$125 983 025 437\"\n      }, {\n        index: 2,\n        name: \"Ethereum\",\n        imageURL: \"images/Ethereum.png\",\n        price: \"$8000\",\n        change: \"+5%\",\n        volume: \"$29 679 894 734\",\n        marketcap: \"$125 983 025 437\"\n      }, {\n        index: 3,\n        name: \"Monero\",\n        imageURL: \"images/Monero.png\",\n        price: \"$8000\",\n        change: \"+5%\",\n        volume: \"$29 679 894 734\",\n        marketcap: \"$125 983 025 437\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    // Call the webservice to get the crypto data\n    const reponse = getCryptoByMarketcap();\n    console.log(reponse);\n    this.setState({\n      crypto: reponse.data.data.data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Nom\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Prix\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Change\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Volume\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Capitalisation du march\\xE9\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.crypto.map(crypto => React.createElement(Crypto, {\n      info: crypto,\n      key: crypto.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/Seigneurhol/Documents/ReactTests/crypto-price/crypto-price-react/src/App.js"],"names":["React","Component","Crypto","Navbar","getCryptoByMarketcap","App","constructor","props","state","crypto","index","name","imageURL","price","change","volume","marketcap","componentDidMount","reponse","console","log","setState","data","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Crypto from \"./Crypto/Crypto\";\nimport Navbar from \"./Navbar/Navbar\";\nimport getCryptoByMarketcap from \"./Service/Service\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      crypto: [\n        {\n          index: 1,\n          name: \"Bitcoin\",\n          imageURL: \"images/Bitcoin.png\",\n          price: \"$8000\",\n          change: \"+5%\",\n          volume: \"$29 679 894 734\",\n          marketcap: \"$125 983 025 437\"\n        },\n        {\n          index: 2,\n          name: \"Ethereum\",\n          imageURL: \"images/Ethereum.png\",\n          price: \"$8000\",\n          change: \"+5%\",\n          volume: \"$29 679 894 734\",\n          marketcap: \"$125 983 025 437\"\n        },\n        {\n          index: 3,\n          name: \"Monero\",\n          imageURL: \"images/Monero.png\",\n          price: \"$8000\",\n          change: \"+5%\",\n          volume: \"$29 679 894 734\",\n          marketcap: \"$125 983 025 437\"\n        }\n      ]\n    };\n  }\n\n  componentDidMount(){\n    // Call the webservice to get the crypto data\n    const reponse = getCryptoByMarketcap();\n    console.log(reponse);\n    this.setState({crypto: reponse.data.data.data});\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Navbar />\n        <div className=\"container-fluid\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Nom</th>\n                <th scope=\"col\">Prix</th>\n                <th scope=\"col\">Change</th>\n                <th scope=\"col\">Volume</th>\n                <th scope=\"col\">Capitalisation du marché</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.crypto.map(crypto => (\n                <Crypto info={crypto} key={crypto.index} />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}