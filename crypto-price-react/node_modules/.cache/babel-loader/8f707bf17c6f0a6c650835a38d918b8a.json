{"ast":null,"code":"var _jsxFileName = \"/Users/Seigneurhol/Documents/ReactTests/crypto-price/crypto-price-react/src/Crypto/Crypto.js\";\nimport React, { Component } from \"react\";\nimport \"./Crypto.css\";\n\nfunction formatPrice(number) {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    useGrouping: \"true\"\n  }).format(number);\n}\n\nfunction formatLargePrice(number) {\n  if (Math.abs(number) >= 1000000000) {\n    return formatPrice(number / 1000000000) + \"B\";\n  } else if (Math.abs(number) >= 1000000) {\n    return formatPrice(number / 1000000000) + \"M\";\n  } else if (Math.abs(number) >= 1000) {\n    return formatPrice(number / 1000) + \"K\";\n  } else {\n    return formatPrice(number);\n  }\n}\n\nfunction formatNumber(number) {\n  return new Intl.NumberFormat(\"en-US\", {\n    maximumFractionDigits: 2\n  }).format(number);\n}\n\nfunction formatPercentage(number) {\n  return new Intl.NumberFormat(\"en-US\", {\n    maximumFractionDigits: 2,\n    style: \"percent\"\n  }).format(number / 100);\n}\n\nfunction Crypto(props) {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.info.cmc_rank), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/images/\" + props.info.name + \".png\",\n    className: \"card-img-top\",\n    alt: props.info.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.info.name))), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, formatPrice(props.info.quote.USD.price)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, formatPercentage(props.info.quote.USD.percent_change_24h)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, formatLargePrice(props.info.quote.USD.volume_24h)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, formatLargePrice(props.info.quote.USD.market_cap)));\n}\n\nexport default Crypto;","map":{"version":3,"sources":["/Users/Seigneurhol/Documents/ReactTests/crypto-price/crypto-price-react/src/Crypto/Crypto.js"],"names":["React","Component","formatPrice","number","Intl","NumberFormat","style","currency","useGrouping","format","formatLargePrice","Math","abs","formatNumber","maximumFractionDigits","formatPercentage","Crypto","props","info","cmc_rank","name","quote","USD","price","percent_change_24h","volume_24h","market_cap"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Crypto.css\";\n\nfunction formatPrice(number) {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    useGrouping: \"true\"\n  }).format(number);\n}\n\nfunction formatLargePrice(number) {\n  if (Math.abs(number) >= 1000000000) {\n    return formatPrice(number / 1000000000) + \"B\";\n  } else if (Math.abs(number) >= 1000000) {\n    return formatPrice(number / 1000000000) + \"M\";\n  } else if (Math.abs(number) >= 1000) {\n    return formatPrice(number / 1000) + \"K\";\n  } else {\n    return formatPrice(number);\n  }\n}\n\nfunction formatNumber(number) {\n  return new Intl.NumberFormat(\"en-US\", { maximumFractionDigits: 2 }).format(\n    number\n  );\n}\n\nfunction formatPercentage(number) {\n  return new Intl.NumberFormat(\"en-US\", {\n    maximumFractionDigits: 2,\n    style: \"percent\"\n  }).format(number / 100);\n}\n\nfunction Crypto(props) {\n  return (\n    <tr>\n      <th scope=\"row\">{props.info.cmc_rank}</th>\n      <td>\n        <div className=\"row align-items-center\">\n          <div className=\"col-5\">\n            <img\n              src={\"/images/\" + props.info.name + \".png\"}\n              className=\"card-img-top\"\n              alt={props.info.name}\n            />\n          </div>\n          <div className=\"col-5\">{props.info.name}</div>\n        </div>\n      </td>\n      <td>{formatPrice(props.info.quote.USD.price)}</td>\n      <td>{formatPercentage(props.info.quote.USD.percent_change_24h)}</td>\n      <td>{formatLargePrice(props.info.quote.USD.volume_24h)}</td>\n      <td>{formatLargePrice(props.info.quote.USD.market_cap)}</td>\n    </tr>\n  );\n}\n\nexport default Crypto;\n"]},"metadata":{},"sourceType":"module"}