{"ast":null,"code":"var _jsxFileName = \"/Users/Seigneurhol/Documents/ReactTests/crypto-price/crypto-price-react/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Crypto from \"./Crypto/Crypto\";\nimport Navbar from \"./Navbar/Navbar\";\nimport getCryptoByMarketcap from \"./Service/Service\";\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    /*this.state = {\n      crypto: [\n        {\n          index: 1,\n          name: \"Bitcoin\",\n          imageURL: \"images/Bitcoin.png\",\n          price: \"$8000\",\n          change: \"+5%\",\n          volume: \"$29 679 894 734\",\n          marketcap: \"$125 983 025 437\"\n        },\n        {\n          index: 2,\n          name: \"Ethereum\",\n          imageURL: \"images/Ethereum.png\",\n          price: \"$8000\",\n          change: \"+5%\",\n          volume: \"$29 679 894 734\",\n          marketcap: \"$125 983 025 437\"\n        },\n        {\n          index: 3,\n          name: \"Monero\",\n          imageURL: \"images/Monero.png\",\n          price: \"$8000\",\n          change: \"+5%\",\n          volume: \"$29 679 894 734\",\n          marketcap: \"$125 983 025 437\"\n        }\n      ]\n    };*/\n  }\n\n  componentDidMount() {\n    // Call the webservice to get the crypto data\n    // ICI gerer les errers si y a pas de data\n    getCryptoByMarketcap(reponse => {\n      this.setState({\n        crypto: reponse.data.data.data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Change (24h)\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Volume (24h)\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Market Cap\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.crypto ? this.state.crypto.map(crypto => React.createElement(Crypto, {\n      info: crypto,\n      key: crypto.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })) : null))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/Seigneurhol/Documents/ReactTests/crypto-price/crypto-price-react/src/App.js"],"names":["React","Component","Crypto","Navbar","getCryptoByMarketcap","App","constructor","props","state","componentDidMount","reponse","setState","crypto","data","render","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,oBAAP,MAAiC,mBAAjC;AAEA,OAAO,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACAL,IAAAA,oBAAoB,CAACM,OAAO,IAAI;AAC9B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEF,OAAO,CAACG,IAAR,CAAaA,IAAb,CAAkBA;AAA5B,OAAd;AACD,KAFmB,CAApB;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAKE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,EAME;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,KAAL,CAAWI,MAAX,GACG,KAAKJ,KAAL,CAAWI,MAAX,CAAkBG,GAAlB,CAAsBH,MAAM,IAC1B,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAEA,MAAd;AAAsB,MAAA,GAAG,EAAEA,MAAM,CAACI,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADH,GAIG,IALN,CAXF,CADF,CAFF,CADF;AA0BD;;AA1EgC;AA6EnC,eAAeX,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Crypto from \"./Crypto/Crypto\";\nimport Navbar from \"./Navbar/Navbar\";\nimport getCryptoByMarketcap from \"./Service/Service\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    /*this.state = {\n      crypto: [\n        {\n          index: 1,\n          name: \"Bitcoin\",\n          imageURL: \"images/Bitcoin.png\",\n          price: \"$8000\",\n          change: \"+5%\",\n          volume: \"$29 679 894 734\",\n          marketcap: \"$125 983 025 437\"\n        },\n        {\n          index: 2,\n          name: \"Ethereum\",\n          imageURL: \"images/Ethereum.png\",\n          price: \"$8000\",\n          change: \"+5%\",\n          volume: \"$29 679 894 734\",\n          marketcap: \"$125 983 025 437\"\n        },\n        {\n          index: 3,\n          name: \"Monero\",\n          imageURL: \"images/Monero.png\",\n          price: \"$8000\",\n          change: \"+5%\",\n          volume: \"$29 679 894 734\",\n          marketcap: \"$125 983 025 437\"\n        }\n      ]\n    };*/\n  }\n\n  componentDidMount() {\n    // Call the webservice to get the crypto data\n    // ICI gerer les errers si y a pas de data\n    getCryptoByMarketcap(reponse => {\n      this.setState({ crypto: reponse.data.data.data });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Navbar />\n        <div className=\"container-fluid\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Price</th>\n                <th scope=\"col\">Change (24h)</th>\n                <th scope=\"col\">Volume (24h)</th>\n                <th scope=\"col\">Market Cap</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.crypto\n                ? this.state.crypto.map(crypto => (\n                    <Crypto info={crypto} key={crypto.id} />\n                  ))\n                : null}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}